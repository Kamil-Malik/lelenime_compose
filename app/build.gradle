plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

android {
    namespace = "com.lelestacia.lelenime"
    compileSdkVersion = 33

    defaultConfig {
        applicationId 'com.lelestacia.lelenime'
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName '1.0.0'


        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables {
            useSupportLibrary = true
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        benchmark {
            initWith release
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        buildConfig = true
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.3"
    }

    packagingOptions {
        resources {
            exclude "/META-INF/LICENSE"
            exclude "/META-INF/LICENSE.txt"
            exclude "/META-INF/NOTICE"
            exclude "/META-INF/NOTICE.txt"
            exclude "/META-INF/DEPENDENCIES"
            exclude "/META-INF/*.kotlin_module"
        }
    }
}

dependencies {
    //  Module Implementation
    implementation project(":core:common")
    implementation project(":core:model")
    implementation project(":core:domain")
    implementation project(":feature:explore")
    implementation project(":feature:collection")
    implementation project(":feature:more")
    implementation project(":feature:detail")

    //  Compose Toolkit
    implementation platform(libs.compose.bom)
    implementation libs.bundles.compose.toolkit
    implementation libs.compose.navigation
    androidTestImplementation platform(libs.compose.bom)
    androidTestImplementation libs.compose.junit
    debugImplementation libs.bundles.compose.tooling.and.manifest

    implementation libs.firebase.crashlytics.ktx
    implementation libs.firebase.analytics.ktx
    implementation libs.firebase.perf.ktx

    // KTX
    implementation libs.kotlin.ktx

    // Lifecycle
    implementation libs.lifecycle.runtime

    //  Activity Compose
    implementation libs.activity.compose

    // Android JUnit
    androidTestImplementation libs.android.junit

    // Junit
    testImplementation libs.junit

    // Espresso UI Test
    androidTestImplementation libs.espresso

    //  Dagger Hilt
    implementation libs.dagger.hilt.module
    kapt libs.dagger.hilt.compiler
    implementation libs.dagger.hilt.compose

    //  Timber
    implementation libs.timber

    //  Accompanist
    implementation libs.accompanist.system.ui.controller
    implementation libs.accompanist.animation.navigation

    //  Profiler
    implementation libs.baseline.profiler
}

kapt {
    correctErrorTypes true
    showProcessorStats true
    useBuildCache true
}
